// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v5.29.3
// source: gossip.proto

package farcaster

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ContactInfoBody struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	GossipAddress    string                 `protobuf:"bytes,1,opt,name=gossip_address,json=gossipAddress,proto3" json:"gossip_address,omitempty"`
	PeerId           []byte                 `protobuf:"bytes,2,opt,name=peer_id,json=peerId,proto3" json:"peer_id,omitempty"`
	SnapchainVersion string                 `protobuf:"bytes,3,opt,name=snapchain_version,json=snapchainVersion,proto3" json:"snapchain_version,omitempty"`
	Network          FarcasterNetwork       `protobuf:"varint,4,opt,name=network,proto3,enum=FarcasterNetwork" json:"network,omitempty"`
	Timestamp        uint64                 `protobuf:"varint,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ContactInfoBody) Reset() {
	*x = ContactInfoBody{}
	mi := &file_gossip_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ContactInfoBody) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContactInfoBody) ProtoMessage() {}

func (x *ContactInfoBody) ProtoReflect() protoreflect.Message {
	mi := &file_gossip_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContactInfoBody.ProtoReflect.Descriptor instead.
func (*ContactInfoBody) Descriptor() ([]byte, []int) {
	return file_gossip_proto_rawDescGZIP(), []int{0}
}

func (x *ContactInfoBody) GetGossipAddress() string {
	if x != nil {
		return x.GossipAddress
	}
	return ""
}

func (x *ContactInfoBody) GetPeerId() []byte {
	if x != nil {
		return x.PeerId
	}
	return nil
}

func (x *ContactInfoBody) GetSnapchainVersion() string {
	if x != nil {
		return x.SnapchainVersion
	}
	return ""
}

func (x *ContactInfoBody) GetNetwork() FarcasterNetwork {
	if x != nil {
		return x.Network
	}
	return FarcasterNetwork_FARCASTER_NETWORK_NONE
}

func (x *ContactInfoBody) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

type ContactInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Body          *ContactInfoBody       `protobuf:"bytes,1,opt,name=body,proto3" json:"body,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ContactInfo) Reset() {
	*x = ContactInfo{}
	mi := &file_gossip_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ContactInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContactInfo) ProtoMessage() {}

func (x *ContactInfo) ProtoReflect() protoreflect.Message {
	mi := &file_gossip_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContactInfo.ProtoReflect.Descriptor instead.
func (*ContactInfo) Descriptor() ([]byte, []int) {
	return file_gossip_proto_rawDescGZIP(), []int{1}
}

func (x *ContactInfo) GetBody() *ContactInfoBody {
	if x != nil {
		return x.Body
	}
	return nil
}

type GossipMessage struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to GossipMessage:
	//
	//	*GossipMessage_Consensus
	//	*GossipMessage_FullProposal
	//	*GossipMessage_MempoolMessage
	//	*GossipMessage_Status
	//	*GossipMessage_ReadNodeMessage
	//	*GossipMessage_ContactInfoMessage
	GossipMessage isGossipMessage_GossipMessage `protobuf_oneof:"gossip_message"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GossipMessage) Reset() {
	*x = GossipMessage{}
	mi := &file_gossip_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GossipMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GossipMessage) ProtoMessage() {}

func (x *GossipMessage) ProtoReflect() protoreflect.Message {
	mi := &file_gossip_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GossipMessage.ProtoReflect.Descriptor instead.
func (*GossipMessage) Descriptor() ([]byte, []int) {
	return file_gossip_proto_rawDescGZIP(), []int{2}
}

func (x *GossipMessage) GetGossipMessage() isGossipMessage_GossipMessage {
	if x != nil {
		return x.GossipMessage
	}
	return nil
}

func (x *GossipMessage) GetConsensus() *ConsensusMessage {
	if x != nil {
		if x, ok := x.GossipMessage.(*GossipMessage_Consensus); ok {
			return x.Consensus
		}
	}
	return nil
}

func (x *GossipMessage) GetFullProposal() *FullProposal {
	if x != nil {
		if x, ok := x.GossipMessage.(*GossipMessage_FullProposal); ok {
			return x.FullProposal
		}
	}
	return nil
}

func (x *GossipMessage) GetMempoolMessage() *MempoolMessage {
	if x != nil {
		if x, ok := x.GossipMessage.(*GossipMessage_MempoolMessage); ok {
			return x.MempoolMessage
		}
	}
	return nil
}

func (x *GossipMessage) GetStatus() *StatusMessage {
	if x != nil {
		if x, ok := x.GossipMessage.(*GossipMessage_Status); ok {
			return x.Status
		}
	}
	return nil
}

func (x *GossipMessage) GetReadNodeMessage() *ReadNodeMessage {
	if x != nil {
		if x, ok := x.GossipMessage.(*GossipMessage_ReadNodeMessage); ok {
			return x.ReadNodeMessage
		}
	}
	return nil
}

func (x *GossipMessage) GetContactInfoMessage() *ContactInfo {
	if x != nil {
		if x, ok := x.GossipMessage.(*GossipMessage_ContactInfoMessage); ok {
			return x.ContactInfoMessage
		}
	}
	return nil
}

type isGossipMessage_GossipMessage interface {
	isGossipMessage_GossipMessage()
}

type GossipMessage_Consensus struct {
	Consensus *ConsensusMessage `protobuf:"bytes,1,opt,name=consensus,proto3,oneof"`
}

type GossipMessage_FullProposal struct {
	FullProposal *FullProposal `protobuf:"bytes,2,opt,name=full_proposal,json=fullProposal,proto3,oneof"`
}

type GossipMessage_MempoolMessage struct {
	MempoolMessage *MempoolMessage `protobuf:"bytes,3,opt,name=mempool_message,json=mempoolMessage,proto3,oneof"`
}

type GossipMessage_Status struct {
	Status *StatusMessage `protobuf:"bytes,4,opt,name=status,proto3,oneof"`
}

type GossipMessage_ReadNodeMessage struct {
	ReadNodeMessage *ReadNodeMessage `protobuf:"bytes,5,opt,name=read_node_message,json=readNodeMessage,proto3,oneof"`
}

type GossipMessage_ContactInfoMessage struct {
	ContactInfoMessage *ContactInfo `protobuf:"bytes,6,opt,name=contact_info_message,json=contactInfoMessage,proto3,oneof"`
}

func (*GossipMessage_Consensus) isGossipMessage_GossipMessage() {}

func (*GossipMessage_FullProposal) isGossipMessage_GossipMessage() {}

func (*GossipMessage_MempoolMessage) isGossipMessage_GossipMessage() {}

func (*GossipMessage_Status) isGossipMessage_GossipMessage() {}

func (*GossipMessage_ReadNodeMessage) isGossipMessage_GossipMessage() {}

func (*GossipMessage_ContactInfoMessage) isGossipMessage_GossipMessage() {}

var File_gossip_proto protoreflect.FileDescriptor

var file_gossip_proto_rawDesc = string([]byte{
	0x0a, 0x0c, 0x67, 0x6f, 0x73, 0x73, 0x69, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0d,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc9, 0x01, 0x0a, 0x0f,
	0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x6f, 0x64, 0x79, 0x12,
	0x25, 0x0a, 0x0e, 0x67, 0x6f, 0x73, 0x73, 0x69, 0x70, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x67, 0x6f, 0x73, 0x73, 0x69, 0x70, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x65, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x70, 0x65, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x2b, 0x0a, 0x11, 0x73, 0x6e, 0x61, 0x70, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x73, 0x6e, 0x61, 0x70,
	0x63, 0x68, 0x61, 0x69, 0x6e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x2b, 0x0a, 0x07,
	0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e,
	0x46, 0x61, 0x72, 0x63, 0x61, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x52, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0x33, 0x0a, 0x0b, 0x43, 0x6f, 0x6e, 0x74, 0x61,
	0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x24, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x42, 0x6f, 0x64, 0x79, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x22, 0xf2, 0x02, 0x0a,
	0x0d, 0x47, 0x6f, 0x73, 0x73, 0x69, 0x70, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x31,
	0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x43, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75,
	0x73, 0x12, 0x34, 0x0a, 0x0d, 0x66, 0x75, 0x6c, 0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73,
	0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x46, 0x75, 0x6c, 0x6c, 0x50,
	0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x48, 0x00, 0x52, 0x0c, 0x66, 0x75, 0x6c, 0x6c, 0x50,
	0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x12, 0x3a, 0x0a, 0x0f, 0x6d, 0x65, 0x6d, 0x70, 0x6f,
	0x6f, 0x6c, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x4d, 0x65, 0x6d, 0x70, 0x6f, 0x6f, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x48, 0x00, 0x52, 0x0e, 0x6d, 0x65, 0x6d, 0x70, 0x6f, 0x6f, 0x6c, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x28, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x3e, 0x0a,
	0x11, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x4e,
	0x6f, 0x64, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x0f, 0x72, 0x65,
	0x61, 0x64, 0x4e, 0x6f, 0x64, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x40, 0x0a,
	0x14, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x43, 0x6f,
	0x6e, 0x74, 0x61, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x12, 0x63, 0x6f, 0x6e,
	0x74, 0x61, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42,
	0x10, 0x0a, 0x0e, 0x67, 0x6f, 0x73, 0x73, 0x69, 0x70, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_gossip_proto_rawDescOnce sync.Once
	file_gossip_proto_rawDescData []byte
)

func file_gossip_proto_rawDescGZIP() []byte {
	file_gossip_proto_rawDescOnce.Do(func() {
		file_gossip_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_gossip_proto_rawDesc), len(file_gossip_proto_rawDesc)))
	})
	return file_gossip_proto_rawDescData
}

var file_gossip_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_gossip_proto_goTypes = []any{
	(*ContactInfoBody)(nil),  // 0: ContactInfoBody
	(*ContactInfo)(nil),      // 1: ContactInfo
	(*GossipMessage)(nil),    // 2: GossipMessage
	(FarcasterNetwork)(0),    // 3: FarcasterNetwork
	(*ConsensusMessage)(nil), // 4: ConsensusMessage
	(*FullProposal)(nil),     // 5: FullProposal
	(*MempoolMessage)(nil),   // 6: MempoolMessage
	(*StatusMessage)(nil),    // 7: StatusMessage
	(*ReadNodeMessage)(nil),  // 8: ReadNodeMessage
}
var file_gossip_proto_depIdxs = []int32{
	3, // 0: ContactInfoBody.network:type_name -> FarcasterNetwork
	0, // 1: ContactInfo.body:type_name -> ContactInfoBody
	4, // 2: GossipMessage.consensus:type_name -> ConsensusMessage
	5, // 3: GossipMessage.full_proposal:type_name -> FullProposal
	6, // 4: GossipMessage.mempool_message:type_name -> MempoolMessage
	7, // 5: GossipMessage.status:type_name -> StatusMessage
	8, // 6: GossipMessage.read_node_message:type_name -> ReadNodeMessage
	1, // 7: GossipMessage.contact_info_message:type_name -> ContactInfo
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_gossip_proto_init() }
func file_gossip_proto_init() {
	if File_gossip_proto != nil {
		return
	}
	file_message_proto_init()
	file_blocks_proto_init()
	file_gossip_proto_msgTypes[2].OneofWrappers = []any{
		(*GossipMessage_Consensus)(nil),
		(*GossipMessage_FullProposal)(nil),
		(*GossipMessage_MempoolMessage)(nil),
		(*GossipMessage_Status)(nil),
		(*GossipMessage_ReadNodeMessage)(nil),
		(*GossipMessage_ContactInfoMessage)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_gossip_proto_rawDesc), len(file_gossip_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_gossip_proto_goTypes,
		DependencyIndexes: file_gossip_proto_depIdxs,
		MessageInfos:      file_gossip_proto_msgTypes,
	}.Build()
	File_gossip_proto = out.File
	file_gossip_proto_goTypes = nil
	file_gossip_proto_depIdxs = nil
}
