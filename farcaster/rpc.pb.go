// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v5.29.3
// source: rpc.proto

package farcaster

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

var File_rpc_proto protoreflect.FileDescriptor

var file_rpc_proto_rawDesc = string([]byte{
	0x0a, 0x09, 0x72, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0d, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0f, 0x68, 0x75, 0x62, 0x5f, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x75, 0x73, 0x65, 0x72, 0x6e,
	0x61, 0x6d, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x13, 0x6f, 0x6e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x16, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x32, 0xb2, 0x11, 0x0a,
	0x0a, 0x48, 0x75, 0x62, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x53,
	0x75, 0x62, 0x6d, 0x69, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x08, 0x2e, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x08, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x30, 0x0a, 0x0f, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x08, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x13, 0x2e,
	0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x25, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x12,
	0x0e, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x06, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x30, 0x01, 0x12, 0x3b, 0x0a, 0x0e, 0x47, 0x65, 0x74,
	0x53, 0x68, 0x61, 0x72, 0x64, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x73, 0x12, 0x13, 0x2e, 0x53, 0x68,
	0x61, 0x72, 0x64, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x14, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x64, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x0f, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x10, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x46, 0x69, 0x64, 0x73, 0x12,
	0x0c, 0x2e, 0x46, 0x69, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0d, 0x2e,
	0x46, 0x69, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x09,
	0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x12, 0x11, 0x2e, 0x53, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x09, 0x2e, 0x48,
	0x75, 0x62, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x30, 0x01, 0x12, 0x24, 0x0a, 0x08, 0x47, 0x65, 0x74,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x0d, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x09, 0x2e, 0x48, 0x75, 0x62, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12,
	0x2c, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x0e, 0x2e, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0f, 0x2e, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a,
	0x07, 0x47, 0x65, 0x74, 0x43, 0x61, 0x73, 0x74, 0x12, 0x07, 0x2e, 0x43, 0x61, 0x73, 0x74, 0x49,
	0x64, 0x1a, 0x08, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2f, 0x0a, 0x0d, 0x47,
	0x65, 0x74, 0x43, 0x61, 0x73, 0x74, 0x73, 0x42, 0x79, 0x46, 0x69, 0x64, 0x12, 0x0b, 0x2e, 0x46,
	0x69, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x10,
	0x47, 0x65, 0x74, 0x43, 0x61, 0x73, 0x74, 0x73, 0x42, 0x79, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x12, 0x15, 0x2e, 0x43, 0x61, 0x73, 0x74, 0x73, 0x42, 0x79, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x11, 0x47, 0x65,
	0x74, 0x43, 0x61, 0x73, 0x74, 0x73, 0x42, 0x79, 0x4d, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x0b, 0x2e, 0x46, 0x69, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x29, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10,
	0x2e, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x08, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x3e, 0x0a, 0x11, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x79, 0x46, 0x69, 0x64, 0x12,
	0x16, 0x2e, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x79, 0x46, 0x69, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x12, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x79, 0x43, 0x61, 0x73, 0x74,
	0x12, 0x19, 0x2e, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x79, 0x54, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44,
	0x0a, 0x14, 0x47, 0x65, 0x74, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x79,
	0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x19, 0x2e, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x42, 0x79, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x11, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x10, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x08, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x32, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x42, 0x79,
	0x46, 0x69, 0x64, 0x12, 0x0b, 0x2e, 0x46, 0x69, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x11, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x12, 0x15, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0e,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x12, 0x3e,
	0x0a, 0x16, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x50, 0x72, 0x6f,
	0x6f, 0x66, 0x73, 0x42, 0x79, 0x46, 0x69, 0x64, 0x12, 0x0b, 0x2e, 0x46, 0x69, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x50, 0x72, 0x6f, 0x6f, 0x66, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31,
	0x0a, 0x0f, 0x47, 0x65, 0x74, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x14, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x08, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x37, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x79, 0x46, 0x69, 0x64, 0x12, 0x0b, 0x2e, 0x46, 0x69, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x10, 0x47, 0x65,
	0x74, 0x4f, 0x6e, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x12, 0x0e,
	0x2e, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0d,
	0x2e, 0x4f, 0x6e, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x3c, 0x0a,
	0x16, 0x47, 0x65, 0x74, 0x4f, 0x6e, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x53, 0x69, 0x67, 0x6e, 0x65,
	0x72, 0x73, 0x42, 0x79, 0x46, 0x69, 0x64, 0x12, 0x0b, 0x2e, 0x46, 0x69, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x4f, 0x6e, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x10, 0x47,
	0x65, 0x74, 0x4f, 0x6e, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12,
	0x14, 0x2e, 0x4f, 0x6e, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x4f, 0x6e, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x19,
	0x47, 0x65, 0x74, 0x49, 0x64, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x4f, 0x6e, 0x43,
	0x68, 0x61, 0x69, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x0b, 0x2e, 0x46, 0x69, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0d, 0x2e, 0x4f, 0x6e, 0x43, 0x68, 0x61, 0x69, 0x6e,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x55, 0x0a, 0x22, 0x47, 0x65, 0x74, 0x49, 0x64, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x4f, 0x6e, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x42, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x20, 0x2e, 0x49, 0x64,
	0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x42, 0x79, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0d, 0x2e,
	0x4f, 0x6e, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x43, 0x0a, 0x1c,
	0x47, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67,
	0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x73, 0x42, 0x79, 0x46, 0x69, 0x64, 0x12, 0x0b, 0x2e, 0x46,
	0x69, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x53, 0x74, 0x6f, 0x72,
	0x61, 0x67, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x21, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x0c, 0x2e, 0x4c,
	0x69, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x08, 0x2e, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x36, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x73,
	0x42, 0x79, 0x46, 0x69, 0x64, 0x12, 0x12, 0x2e, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x42, 0x79, 0x46,
	0x69, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x10,
	0x47, 0x65, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x42, 0x79, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x12, 0x15, 0x2e, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x42, 0x79, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x1f, 0x47, 0x65,
	0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x79, 0x46, 0x69, 0x64, 0x12, 0x0b, 0x2e,
	0x46, 0x69, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a,
	0x17, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x43, 0x61, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x73, 0x42, 0x79, 0x46, 0x69, 0x64, 0x12, 0x14, 0x2e, 0x46, 0x69, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x11,
	0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x46, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x42, 0x79, 0x46, 0x69, 0x64,
	0x12, 0x14, 0x2e, 0x46, 0x69, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x1f, 0x47, 0x65, 0x74,
	0x41, 0x6c, 0x6c, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x42, 0x79, 0x46, 0x69, 0x64, 0x12, 0x14, 0x2e, 0x46,
	0x69, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x11, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x55,
	0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x42,
	0x79, 0x46, 0x69, 0x64, 0x12, 0x14, 0x2e, 0x46, 0x69, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a,
	0x17, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x4c, 0x69, 0x6e, 0x6b, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x73, 0x42, 0x79, 0x46, 0x69, 0x64, 0x12, 0x14, 0x2e, 0x46, 0x69, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x11,
	0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x4e, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x54, 0x72, 0x69, 0x65, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x42, 0x79, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x12, 0x18, 0x2e, 0x54,
	0x72, 0x69, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x54, 0x72, 0x69, 0x65, 0x4e, 0x6f, 0x64,
	0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var file_rpc_proto_goTypes = []any{
	(*Message)(nil),                         // 0: Message
	(*BlocksRequest)(nil),                   // 1: BlocksRequest
	(*ShardChunksRequest)(nil),              // 2: ShardChunksRequest
	(*GetInfoRequest)(nil),                  // 3: GetInfoRequest
	(*FidsRequest)(nil),                     // 4: FidsRequest
	(*SubscribeRequest)(nil),                // 5: SubscribeRequest
	(*EventRequest)(nil),                    // 6: EventRequest
	(*EventsRequest)(nil),                   // 7: EventsRequest
	(*CastId)(nil),                          // 8: CastId
	(*FidRequest)(nil),                      // 9: FidRequest
	(*CastsByParentRequest)(nil),            // 10: CastsByParentRequest
	(*ReactionRequest)(nil),                 // 11: ReactionRequest
	(*ReactionsByFidRequest)(nil),           // 12: ReactionsByFidRequest
	(*ReactionsByTargetRequest)(nil),        // 13: ReactionsByTargetRequest
	(*UserDataRequest)(nil),                 // 14: UserDataRequest
	(*UsernameProofRequest)(nil),            // 15: UsernameProofRequest
	(*VerificationRequest)(nil),             // 16: VerificationRequest
	(*SignerRequest)(nil),                   // 17: SignerRequest
	(*OnChainEventRequest)(nil),             // 18: OnChainEventRequest
	(*IdRegistryEventByAddressRequest)(nil), // 19: IdRegistryEventByAddressRequest
	(*LinkRequest)(nil),                     // 20: LinkRequest
	(*LinksByFidRequest)(nil),               // 21: LinksByFidRequest
	(*LinksByTargetRequest)(nil),            // 22: LinksByTargetRequest
	(*FidTimestampRequest)(nil),             // 23: FidTimestampRequest
	(*TrieNodeMetadataRequest)(nil),         // 24: TrieNodeMetadataRequest
	(*ValidationResponse)(nil),              // 25: ValidationResponse
	(*Block)(nil),                           // 26: Block
	(*ShardChunksResponse)(nil),             // 27: ShardChunksResponse
	(*GetInfoResponse)(nil),                 // 28: GetInfoResponse
	(*FidsResponse)(nil),                    // 29: FidsResponse
	(*HubEvent)(nil),                        // 30: HubEvent
	(*EventsResponse)(nil),                  // 31: EventsResponse
	(*MessagesResponse)(nil),                // 32: MessagesResponse
	(*UserNameProof)(nil),                   // 33: UserNameProof
	(*UsernameProofsResponse)(nil),          // 34: UsernameProofsResponse
	(*OnChainEvent)(nil),                    // 35: OnChainEvent
	(*OnChainEventResponse)(nil),            // 36: OnChainEventResponse
	(*StorageLimitsResponse)(nil),           // 37: StorageLimitsResponse
	(*TrieNodeMetadataResponse)(nil),        // 38: TrieNodeMetadataResponse
}
var file_rpc_proto_depIdxs = []int32{
	0,  // 0: HubService.SubmitMessage:input_type -> Message
	0,  // 1: HubService.ValidateMessage:input_type -> Message
	1,  // 2: HubService.GetBlocks:input_type -> BlocksRequest
	2,  // 3: HubService.GetShardChunks:input_type -> ShardChunksRequest
	3,  // 4: HubService.GetInfo:input_type -> GetInfoRequest
	4,  // 5: HubService.GetFids:input_type -> FidsRequest
	5,  // 6: HubService.Subscribe:input_type -> SubscribeRequest
	6,  // 7: HubService.GetEvent:input_type -> EventRequest
	7,  // 8: HubService.GetEvents:input_type -> EventsRequest
	8,  // 9: HubService.GetCast:input_type -> CastId
	9,  // 10: HubService.GetCastsByFid:input_type -> FidRequest
	10, // 11: HubService.GetCastsByParent:input_type -> CastsByParentRequest
	9,  // 12: HubService.GetCastsByMention:input_type -> FidRequest
	11, // 13: HubService.GetReaction:input_type -> ReactionRequest
	12, // 14: HubService.GetReactionsByFid:input_type -> ReactionsByFidRequest
	13, // 15: HubService.GetReactionsByCast:input_type -> ReactionsByTargetRequest
	13, // 16: HubService.GetReactionsByTarget:input_type -> ReactionsByTargetRequest
	14, // 17: HubService.GetUserData:input_type -> UserDataRequest
	9,  // 18: HubService.GetUserDataByFid:input_type -> FidRequest
	15, // 19: HubService.GetUsernameProof:input_type -> UsernameProofRequest
	9,  // 20: HubService.GetUserNameProofsByFid:input_type -> FidRequest
	16, // 21: HubService.GetVerification:input_type -> VerificationRequest
	9,  // 22: HubService.GetVerificationsByFid:input_type -> FidRequest
	17, // 23: HubService.GetOnChainSigner:input_type -> SignerRequest
	9,  // 24: HubService.GetOnChainSignersByFid:input_type -> FidRequest
	18, // 25: HubService.GetOnChainEvents:input_type -> OnChainEventRequest
	9,  // 26: HubService.GetIdRegistryOnChainEvent:input_type -> FidRequest
	19, // 27: HubService.GetIdRegistryOnChainEventByAddress:input_type -> IdRegistryEventByAddressRequest
	9,  // 28: HubService.GetCurrentStorageLimitsByFid:input_type -> FidRequest
	20, // 29: HubService.GetLink:input_type -> LinkRequest
	21, // 30: HubService.GetLinksByFid:input_type -> LinksByFidRequest
	22, // 31: HubService.GetLinksByTarget:input_type -> LinksByTargetRequest
	9,  // 32: HubService.GetLinkCompactStateMessageByFid:input_type -> FidRequest
	23, // 33: HubService.GetAllCastMessagesByFid:input_type -> FidTimestampRequest
	23, // 34: HubService.GetAllReactionMessagesByFid:input_type -> FidTimestampRequest
	23, // 35: HubService.GetAllVerificationMessagesByFid:input_type -> FidTimestampRequest
	23, // 36: HubService.GetAllUserDataMessagesByFid:input_type -> FidTimestampRequest
	23, // 37: HubService.GetAllLinkMessagesByFid:input_type -> FidTimestampRequest
	24, // 38: HubService.GetTrieMetadataByPrefix:input_type -> TrieNodeMetadataRequest
	0,  // 39: HubService.SubmitMessage:output_type -> Message
	25, // 40: HubService.ValidateMessage:output_type -> ValidationResponse
	26, // 41: HubService.GetBlocks:output_type -> Block
	27, // 42: HubService.GetShardChunks:output_type -> ShardChunksResponse
	28, // 43: HubService.GetInfo:output_type -> GetInfoResponse
	29, // 44: HubService.GetFids:output_type -> FidsResponse
	30, // 45: HubService.Subscribe:output_type -> HubEvent
	30, // 46: HubService.GetEvent:output_type -> HubEvent
	31, // 47: HubService.GetEvents:output_type -> EventsResponse
	0,  // 48: HubService.GetCast:output_type -> Message
	32, // 49: HubService.GetCastsByFid:output_type -> MessagesResponse
	32, // 50: HubService.GetCastsByParent:output_type -> MessagesResponse
	32, // 51: HubService.GetCastsByMention:output_type -> MessagesResponse
	0,  // 52: HubService.GetReaction:output_type -> Message
	32, // 53: HubService.GetReactionsByFid:output_type -> MessagesResponse
	32, // 54: HubService.GetReactionsByCast:output_type -> MessagesResponse
	32, // 55: HubService.GetReactionsByTarget:output_type -> MessagesResponse
	0,  // 56: HubService.GetUserData:output_type -> Message
	32, // 57: HubService.GetUserDataByFid:output_type -> MessagesResponse
	33, // 58: HubService.GetUsernameProof:output_type -> UserNameProof
	34, // 59: HubService.GetUserNameProofsByFid:output_type -> UsernameProofsResponse
	0,  // 60: HubService.GetVerification:output_type -> Message
	32, // 61: HubService.GetVerificationsByFid:output_type -> MessagesResponse
	35, // 62: HubService.GetOnChainSigner:output_type -> OnChainEvent
	36, // 63: HubService.GetOnChainSignersByFid:output_type -> OnChainEventResponse
	36, // 64: HubService.GetOnChainEvents:output_type -> OnChainEventResponse
	35, // 65: HubService.GetIdRegistryOnChainEvent:output_type -> OnChainEvent
	35, // 66: HubService.GetIdRegistryOnChainEventByAddress:output_type -> OnChainEvent
	37, // 67: HubService.GetCurrentStorageLimitsByFid:output_type -> StorageLimitsResponse
	0,  // 68: HubService.GetLink:output_type -> Message
	32, // 69: HubService.GetLinksByFid:output_type -> MessagesResponse
	32, // 70: HubService.GetLinksByTarget:output_type -> MessagesResponse
	32, // 71: HubService.GetLinkCompactStateMessageByFid:output_type -> MessagesResponse
	32, // 72: HubService.GetAllCastMessagesByFid:output_type -> MessagesResponse
	32, // 73: HubService.GetAllReactionMessagesByFid:output_type -> MessagesResponse
	32, // 74: HubService.GetAllVerificationMessagesByFid:output_type -> MessagesResponse
	32, // 75: HubService.GetAllUserDataMessagesByFid:output_type -> MessagesResponse
	32, // 76: HubService.GetAllLinkMessagesByFid:output_type -> MessagesResponse
	38, // 77: HubService.GetTrieMetadataByPrefix:output_type -> TrieNodeMetadataResponse
	39, // [39:78] is the sub-list for method output_type
	0,  // [0:39] is the sub-list for method input_type
	0,  // [0:0] is the sub-list for extension type_name
	0,  // [0:0] is the sub-list for extension extendee
	0,  // [0:0] is the sub-list for field type_name
}

func init() { file_rpc_proto_init() }
func file_rpc_proto_init() {
	if File_rpc_proto != nil {
		return
	}
	file_message_proto_init()
	file_blocks_proto_init()
	file_hub_event_proto_init()
	file_username_proof_proto_init()
	file_onchain_event_proto_init()
	file_request_response_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_rpc_proto_rawDesc), len(file_rpc_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_rpc_proto_goTypes,
		DependencyIndexes: file_rpc_proto_depIdxs,
	}.Build()
	File_rpc_proto = out.File
	file_rpc_proto_goTypes = nil
	file_rpc_proto_depIdxs = nil
}
